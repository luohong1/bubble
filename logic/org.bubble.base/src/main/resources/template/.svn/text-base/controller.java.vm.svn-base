package ${package.Controller};

import com.github.pagehelper.PageInfo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.goshow.base.dto.QueryParam;
import org.goshow.base.utils.HumpLineUtils;
import org.goshow.base.utils.PageUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.goshow.base.http.DataSet;
import org.goshow.base.context.ApiVersion;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import javax.servlet.http.HttpServletRequest;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * ${table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(value = "${table.controllerName}", description = "${table.comment}api入口")
@Controller
@RequestMapping("/{_v}#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    ${table.serviceName} ${table.serviceName.substring(0, 1).toLowerCase()}${table.serviceName.substring(1)};

    @ApiOperation(value = "获取全部${table.comment}记录带分页信息", response = DataSet.class, notes = "获取全部${table.comment}记录带分页信息")
    @RequestMapping(method = RequestMethod.GET)
    @ApiVersion(1)
    @ResponseBody
    public ResponseEntity get(String field,
        String keyword,
        String sortField,
        String sortOrder,
        HttpServletRequest request) {
        QueryParam queryParam = new QueryParam();
        queryParam.setField(HumpLineUtils.humpToLine2(field));
        queryParam.setKeyword(keyword);
        queryParam.setSortField(HumpLineUtils.humpToLine2(sortField));
        queryParam.setSortOrder(sortOrder);
        PageInfo<${entity}> page = ${table.serviceName.substring(0, 1).toLowerCase()}${table.serviceName.substring(1)}.listPage(PageUtils.getPage(request), queryParam);
        return DataSet.ok(page);
    }

    @ApiOperation(value = "根据ID查询${table.comment}", httpMethod = "GET",response = DataSet.class, notes = "根据ID查询${table.comment}")
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ApiVersion(1)
    @ResponseBody
    public ResponseEntity getId(@PathVariable("id") Long id) {
        return DataSet.ok(${table.serviceName.substring(0, 1).toLowerCase()}${table.serviceName.substring(1)}.selectById(id));
    }


}
